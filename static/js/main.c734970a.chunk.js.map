{"version":3,"sources":["Helpers/Context.js","Components/CreateGame.js","Components/EnterGame.js","Components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["GameStateContext","createContext","RoomContext","CreateGame","socket","useState","codeGenerated","setCode","showCode","setShowCode","useContext","setGameState","gameState","setGameRoom","gameRoom","onClick","codeGen","code","toString","emit","EnterGame","codeEntered","setCodeEntered","type","placeholder","onChange","e","target","value","Game","yourChoice","opponentChoice","choice","setChoice","winner","message","result","setResult","youChose","opponentChose","showResult","setShowResult","useEffect","on","data","calculateWinner","className","room","CONNECTION_PORT","App","menuState","setMenuState","io","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c734970a.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const GameStateContext = createContext(null);\n\nexport const RoomContext = createContext(null);\n","import React, { useState, useContext } from \"react\";\nimport { GameStateContext, RoomContext } from \"../Helpers/Context\";\n\nimport \"../App.css\";\nimport * as code from \"crypto\";\n\nfunction CreateGame({ socket }) {\n  const [codeGenerated, setCode] = useState(\"\");\n  const [showCode, setShowCode] = useState(false);\n  const { gameState, setGameState } = useContext(GameStateContext);\n  const { gameRoom, setGameRoom } = useContext(RoomContext);\n\n  const generateCode = () => {\n    const codeGen = code.randomBytes(2).toString(\"hex\");\n    setCode(codeGen);\n    setShowCode(true);\n    socket.emit(\"join_game\", codeGen);\n    setGameRoom(codeGen);\n  };\n\n  const goToGame = () => {\n    setGameState(\"running\");\n  };\n  return (\n    <>\n      {showCode ? (\n        <>\n          <button onClick={goToGame}>Start Game</button>\n          <h2>{codeGenerated}</h2>\n        </>\n      ) : (\n        <button onClick={generateCode}>Generate Code</button>\n      )}\n    </>\n  );\n}\n\nexport default CreateGame;\n","import React, { useState, useContext } from \"react\";\nimport \"../App.css\";\nimport { GameStateContext, RoomContext } from \"../Helpers/Context\";\n\nfunction EnterGame({ socket }) {\n  const [codeEntered, setCodeEntered] = useState(\"\");\n  const { gameState, setGameState } = useContext(GameStateContext);\n  const { gameRoom, setGameRoom } = useContext(RoomContext);\n\n  const enterGame = () => {\n    socket.emit(\"join_game\", codeEntered);\n    setGameRoom(codeEntered);\n    setGameState(\"running\");\n  };\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        placeholder=\"Code...\"\n        onChange={(e) => setCodeEntered(e.target.value)}\n      />\n      <button onClick={enterGame}>Enter Game</button>\n    </>\n  );\n}\n\nexport default EnterGame;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport \"./Game.css\";\nimport { RoomContext } from \"../Helpers/Context\";\nfunction Game({ socket }) {\n  const [choice, setChoice] = useState({ yourChoice: \"\", opponentChoice: \"\" });\n  const [result, setResult] = useState({ winner: \"\", message: \"\" });\n  const [showResult, setShowResult] = useState({\n    youChose: false,\n    opponentChose: false,\n  });\n  const { gameRoom, setGameRoom } = useContext(RoomContext);\n\n  const submitChoice = () => {\n    socket.emit(\"make_choice\", { room: gameRoom, choice: choice.yourChoice });\n    setShowResult({\n      youChose: true,\n      opponentChose: showResult.opponentChose,\n    });\n  };\n\n  useEffect(() => {\n    socket.on(\"receive_choice\", (data) => {\n      setChoice({ yourChoice: choice.yourChoice, opponentChoice: data });\n      setShowResult({\n        youChose: showResult.youChose,\n        opponentChose: true,\n      });\n    });\n  });\n\n  useEffect(() => {\n    if (showResult.youChose && showResult.opponentChose) {\n      calculateWinner();\n    }\n  }, [showResult.youChose, showResult.opponentChose]);\n\n  const calculateWinner = () => {\n    if (choice.yourChoice === choice.opponentChoice) {\n      setResult({\n        winner: \"No One\",\n        message: `You both chose ${choice.yourChoice}`,\n      });\n    } else if (\n      choice.yourChoice === \"rock\" &&\n      choice.opponentChoice == \"paper\"\n    ) {\n      setResult({\n        winner: \"Your Opponent\",\n        message: `You chose: ${choice.yourChoice} and your Opponent chose: ${choice.opponentChoice}`,\n      });\n    } else if (\n      choice.yourChoice === \"rock\" &&\n      choice.opponentChoice == \"scissors\"\n    ) {\n      setResult({\n        winner: \"You\",\n        message: `You chose: ${choice.yourChoice} and your Opponent chose: ${choice.opponentChoice}`,\n      });\n    } else if (\n      choice.yourChoice === \"paper\" &&\n      choice.opponentChoice == \"rock\"\n    ) {\n      setResult({\n        winner: \"You\",\n        message: `You chose: ${choice.yourChoice} and your Opponent chose: ${choice.opponentChoice}`,\n      });\n    } else if (\n      choice.yourChoice === \"paper\" &&\n      choice.opponentChoice == \"scissors\"\n    ) {\n      setResult({\n        winner: \"Your Opponent\",\n        message: `You chose: ${choice.yourChoice} and your Opponent chose: ${choice.opponentChoice}`,\n      });\n    } else if (\n      choice.yourChoice === \"scissors\" &&\n      choice.opponentChoice == \"paper\"\n    ) {\n      setResult({\n        winner: \"You\",\n        message: `You chose: ${choice.yourChoice} and your Opponent chose: ${choice.opponentChoice}`,\n      });\n    } else if (\n      choice.yourChoice === \"scissors\" &&\n      choice.opponentChoice == \"rock\"\n    ) {\n      setResult({\n        winner: \"Your Opponent\",\n        message: `You chose: ${choice.yourChoice} and your Opponent chose: ${choice.opponentChoice}`,\n      });\n    }\n  };\n\n  return (\n    <div className=\"gameContainer\">\n      <h1>Make Your Choice</h1>\n      <div className=\"options\">\n        <button\n          onClick={() => setChoice({ yourChoice: \"rock\", opponentChoice: \"\" })}\n        >\n          Rock\n        </button>\n        <button\n          onClick={() => setChoice({ yourChoice: \"paper\", opponentChoice: \"\" })}\n        >\n          Paper\n        </button>\n        <button\n          onClick={() =>\n            setChoice({ yourChoice: \"scissors\", opponentChoice: \"\" })\n          }\n        >\n          Scissors\n        </button>\n      </div>\n      <button onClick={submitChoice}>Submit Choice</button>\n\n      {result.winner ? (\n        <div className=\"results\">\n          {\" \"}\n          <h1>Winner: {result.winner}</h1> <p>{result.message}</p>\n          <button\n            onClick={() => {\n              setShowResult({\n                youChose: false,\n                opponentChose: false,\n              });\n              setResult({ winner: \"\", message: \"\" });\n              setChoice({ yourChoice: \"\", opponentChoice: \"\" });\n            }}\n          >\n            Play Again\n          </button>\n        </div>\n      ) : (\n        <>\n          <h1>You selected: {choice.yourChoice}</h1>\n\n          {showResult.youChose && (\n            <>\n              <h1>Waiting for opponent to select...</h1>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Game;\n","import \"./App.css\";\nimport { useState, useEffect, useContext } from \"react\";\nimport CreateGame from \"./Components/CreateGame\";\nimport EnterGame from \"./Components/EnterGame\";\nimport { GameStateContext, RoomContext } from \"./Helpers/Context\";\n\nimport io from \"socket.io-client\";\nimport Game from \"./Components/Game\";\nlet socket;\n\nconst CONNECTION_PORT = \"https://rpsmultiplayergame.herokuapp.com/\";\n\nfunction App() {\n  const [menuState, setMenuState] = useState(\"initial\");\n  const [gameState, setGameState] = useState(\"starting\");\n  const [gameRoom, setGameRoom] = useState(\"\");\n\n  useEffect(() => {\n    socket = io(CONNECTION_PORT);\n  }, [CONNECTION_PORT]);\n\n  return (\n    <GameStateContext.Provider value={{ gameState, setGameState }}>\n      <RoomContext.Provider value={{ gameRoom, setGameRoom }}>\n        <div className=\"App\">\n          {gameState == \"starting\" ? (\n            <>\n              <div className=\"top\">\n                <h1>Welcome to Rock, Paper and Scissors</h1>\n                <p className=\"intro\">\n                  Connect With a friend and play the game! To create a game,\n                  press the create game button. You will receive a code that you\n                  can send to your friend to enter in the same game as you.\n                </p>\n              </div>\n\n              <div className=\"menu\">\n                {menuState == \"initial\" ? (\n                  <>\n                    <button onClick={() => setMenuState(\"create\")}>\n                      Create New Game\n                    </button>\n                    <button onClick={() => setMenuState(\"enter\")}>\n                      Enter Game\n                    </button>\n                  </>\n                ) : menuState == \"create\" ? (\n                  <CreateGame socket={socket} />\n                ) : (\n                  <EnterGame socket={socket} />\n                )}\n              </div>\n            </>\n          ) : (\n            <Game socket={socket} />\n          )}\n        </div>\n      </RoomContext.Provider>\n    </GameStateContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}